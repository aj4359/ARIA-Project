import { featureTeamTemplate, productTeamTemplate, RoadmapItem } from './roadmapTemplates';

const formatRoadmap = (items: RoadmapItem[]): string => {
  return items.map(item => `
ðŸ—“ ${item.quarter}
ðŸ“Œ Objectives:
${item.objectives.map(obj => `  â€¢ ${obj}`).join('\n')}
ðŸŽ¯ Outcomes:
${item.outcomes.map(out => `  â€¢ ${out}`).join('\n')}
ðŸ“Š Key Metrics:
${item.metrics.map(metric => `  â€¢ ${metric}`).join('\n')}`).join('\n\n');
};

const responses = {
  help: `I can help with:
â€¢ Product Metrics - Type 'metrics'
â€¢ Feature Roadmap - Type 'feature roadmap'
â€¢ Product Roadmap - Type 'product roadmap'
â€¢ Demo - Type 'start tour'
â€¢ Navigation - Try 'show dashboard'`,

  metrics: `ðŸ“ˆ Current Performance:
â€¢ Active Users: 15k (+12%)
â€¢ Retention: 85%
â€¢ CSAT: 4.8/5
â€¢ Revenue: +25% MoM`,

  features: `âœ¨ Platform Capabilities:
â€¢ Real-time Analytics
â€¢ A/B Testing Engine
â€¢ User Behavior Tracking
â€¢ Automated Insights
â€¢ Custom Dashboards`,

  demo: `ðŸŽ¯ Quick Demo:
1. View metrics - Type 'metrics'
2. See roadmaps - Try 'feature roadmap'
3. Check features - Use 'features'`,

  default: "ðŸ‘‹ I'm here to help! Type 'help' to see what I can do."
};

export const generateResponse = (input: string): string => {
  const command = input.toLowerCase();

  if (command.includes('feature roadmap')) {
    return `Feature Team Roadmap:\n${formatRoadmap(featureTeamTemplate)}`;
  }

  if (command.includes('product roadmap')) {
    return `Product Team Roadmap:\n${formatRoadmap(productTeamTemplate)}`;
  }

  if (command.includes('start tour')) {
    return responses.demo;
  }

  return responses[command as keyof typeof responses] || responses.default;
};